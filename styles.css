@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap');
/* Box sizing rules */

:root {
  --clr-bg: aliceblue;
  --clr-white: #f6fcdf;
  --clr-black: #1a1a19;
  --clr-green: #859f3d;
  --clr-olive: #31511e;

  --ff-Inter:"Inter", sans-serif;
  --fw-700: 700;

  --height: 250px;
  --width: 1000px;
  --quantity: 8;
}
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  scroll-behavior: smooth;
  font-family: var(--ff-Inter);
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
  font-family: var(--ff-JetBrains);
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  padding: 100px;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

.autoScrolling {
 width: 100%;
 height: var(--height);
 overflow: hidden;
 -webkit-mask-image: linear-gradient(to right, transparent, rgb(10, 10, 10) 10%, rgb(10, 10, 10) 90%, transparent);
 mask-image: linear-gradient(to right, transparent, rgb(10, 10, 10) 10%, rgb(10, 10, 10) 90%, transparent);
 -webkit-mask-size: 100%;
 mask-size: 100%;
 -webkit-mask-repeat: no-repeat;
 mask-repeat: no-repeat;
}

.autoScrolling .sliderList{
  display: flex;
  width: 100%;
  min-width: calc(var(--width) * var(--quantity));
  position: relative;
  justify-content: center;
}

.autoScrolling .sliderList .item{
  display: flex;
  align-items: center;
  gap: 1rem;
  width: var(--width);
  height: var(--height);
  position: absolute;
  left: 100%;
  /* animation: autoRun 10s linear infinite;
  -webkit-animation: autoRun 50s linear infinite;
  transition: filter 0.5s;
  animation-delay: calc( (50s / var(--quantity)) * (var(--position) - 1) - 50s)!important; */
}

.autoScrolling .sliderList .item h2{
  background-image: linear-gradient(90deg, #6a38f5, #9881f7 50%, #9baef7);
  color: #e1dffd;
  -webkit-text-stroke-width: 6px;
  -webkit-text-stroke-color: transparent;
  text-transform: uppercase;
  white-space: nowrap;
  -webkit-text-fill-color: transparent;
  -webkit-text-fill-color: #ffffff;
  -webkit-background-clip: text;
  background-clip: text;
  margin-bottom: 0;
  font-size: 8.5rem;
  font-weight: 700;
  line-height: 1.1em;
  
}
/* @keyframes autoRun{
  from{
    left: 100% ;
  }to{
    left: calc(var(--width) * -1);
  }
} */

.autoScrolling:hover .item{
  animation-play-state: paused!important;
  filter: grayscale(1);

  
}



.sliderList .item:hover{
  filter: grayscale(0);
}

.autoScrolling[reverse="true"] .item {
  animation-delay: calc((50s / var(--quantity)) * (var(--position) - 1) - 50s)!important; /* Adjusted delay for slower animation */
  animation: reversePlay 50s linear infinite; /* Increased duration to 20s for slower animation */
  transition: filter 0.5s;
}

@keyframes reversePlay {
  0% {
    left: calc(var(--width) * -1);
    transform: translateX(0);
  }
  /* 25% {
    transform: translateX(2%);
  }
  50% {
    left: calc(50%);
    transform: translateX(5%);
  }
  75% {
    transform: translateX(2%);
  } */
  100% {
    left: 100%;
    transform: translateX(0);
  }
}
